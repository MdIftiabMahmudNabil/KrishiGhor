version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: krishighor_postgres_prod
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data_prod:/var/lib/postgresql/data
      - ./docker/postgres/init:/docker-entrypoint-initdb.d
    networks:
      - krishighor_network_prod
    restart: always
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

  # Redis Cache (Optional)
  redis:
    image: redis:7-alpine
    container_name: krishighor_redis_prod
    ports:
      - "6379:6379"
    networks:
      - krishighor_network_prod
    restart: always
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M

  # PHP-FPM Application
  php:
    build:
      context: .
      dockerfile: Dockerfile.production
    container_name: krishighor_php_prod
    volumes:
      - .:/var/www/html:ro
      - ./docker/php/php.ini:/usr/local/etc/php/conf.d/custom.ini:ro
      - uploads_data:/var/www/html/public/uploads
    networks:
      - krishighor_network_prod
    depends_on:
      - postgres
      - redis
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - APP_ENV=production
      - APP_DEBUG=false
    restart: always
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  # Nginx Web Server
  nginx:
    build:
      context: ./docker/nginx
      dockerfile: Dockerfile.production
    container_name: krishighor_nginx_prod
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - .:/var/www/html:ro
      - ./docker/nginx/nginx.prod.conf:/etc/nginx/nginx.conf:ro
      - ./docker/nginx/site.prod.conf:/etc/nginx/conf.d/default.conf:ro
      - uploads_data:/var/www/html/public/uploads:ro
      - ssl_certs:/etc/nginx/ssl:ro
    networks:
      - krishighor_network_prod
    depends_on:
      - php
    restart: always
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M

  # Background Job Worker (Optional)
  worker:
    build:
      context: .
      dockerfile: Dockerfile.production
    container_name: krishighor_worker_prod
    command: php scripts/worker.php
    volumes:
      - .:/var/www/html:ro
      - uploads_data:/var/www/html/public/uploads
    networks:
      - krishighor_network_prod
    depends_on:
      - postgres
      - redis
    environment:
      - DB_HOST=postgres
      - REDIS_HOST=redis
      - APP_ENV=production
    restart: always
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M

volumes:
  postgres_data_prod:
    driver: local
  uploads_data:
    driver: local
  ssl_certs:
    driver: local

networks:
  krishighor_network_prod:
    driver: bridge
